version: '3'
services:
  reverse-proxy:
    image: traefik:v2.1.3
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443 
      - --providers.docker=true
      - --certificatesResolvers.le.acme.httpChallenge.entryPoint=web
      - --certificatesresolvers.le.acme.email=martin.eigenmann@unisg.ch
      - --certificatesresolvers.le.acme.storage=/acme.json
      - --api.insecure=true
        #- --log.level=DEBUG
      - --providers.docker.exposedByDefault=false
      - --serversTransport.insecureSkipVerify=true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./acme.json:/acme.json

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    ports:
      - 3000:3000
    networks:
      - monitoring
    volumes:
      - grafana-volume:/var/lib/grafana
  influxdb:
    image: influxdb
    container_name: influxdb
    restart: always
    ports:
      - 8086:8086
    networks:
      - monitoring
    volumes:
      - influxdb-volume:/var/lib/influxdb
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.rule=Host(`mqttxes.ics.unisg.ch`)"
      - "traefik.http.routers.adminer.tls=true"
      - "traefik.http.routers.adminer.entryPoints=web,websecure"
      - "traefik.http.routers.adminer.tls.certresolver=le"
    
  postgres:
    image: postgres
    container_name: postgres
    restart: always
    ports:
      - 5432:5432
    networks:
      - monitoring
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres-volume:/var/lib/postgresql/data

  client:
    build: .
    container_name: mqtt-client

networks:
  monitoring:
volumes:
  postgres-volume:
  grafana-volume:
  influxdb-volume:
